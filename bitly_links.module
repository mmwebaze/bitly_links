<?php

/**
 * @file
 * Contains bitly_links.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_help().
 */
function bitly_links_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the bitly_links module.
    case 'help.page.bitly_links':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Generates bitly links.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function bitly_links_theme() {
  return [
    'bitly_links' => [
      'render element' => 'children',
    ],
  ];
}
function bitly_links_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    $config_factory = Drupal::service('config.factory');
    $config = $config_factory->get('bitly_links.settings');
    $enabled_content_types = $config->get('enabled_content_types');

    foreach ($enabled_content_types as $machine_name => $label){
        $enabled_form_id = 'node_'.$machine_name.'_form';
        if ($enabled_form_id == $form_id && $config->get('enable_on_node_creation') == 1){
            $form['enable_on_node_creation'] = array(
                '#type' => 'checkbox',
                '#title' => t('Create bitly link for this content'),
                '#weight' => ($form['bitly_links_field']['#weight'] + 1),
                '#default_value' => $config->get('enable_on_node_creation'),
            );
            $form['#entity_builders'][] = 'bitly_links_node_builder';
        }
    }
}
/**
 * Entity form builder to add the enable_on_node_creation information to the node.
 *
 * @todo: Remove this in favor of an entity field.
 */
function bitly_links_node_builder($entity_type, \Drupal\node\NodeInterface $entity, &$form, FormStateInterface $form_state) {
    $entity->enable_on_node_creation = $form_state->getValue('enable_on_node_creation');
}

/**
 * Implements hook_entity_insert().
 */
function bitly_links_entity_insert(EntityInterface $entity) {
    if (isset($entity->enable_on_node_creation) && $entity->enable_on_node_creation == 1){
        $config_factory = Drupal::service('config.factory');
        $config = $config_factory->get('bitly_links.settings');
        $enabled_content_types = $config->get('enabled_content_types');
        $machine_names = array_keys($enabled_content_types);
        if ($entity instanceof ContentEntityInterface && in_array($entity->getType(), $machine_names)){
            $id = $entity->id();
            if(isset($id)){
                $bulkOperationManager = Drupal::service('bitly_links.bulk_operations');
                $bulkOperationManager->generate($entity->getType(), 2, [$id]);
            }
        }
    }
}
/**
 * Implements hook_module_implements_alter().
 */
function bitly_links_module_implements_alter(&$implementations, $hook) {
    if ($hook == 'entity_insert'){
        $group = $implementations['bitly_links'];
        unset($implementations['bitly_links']);
        $implementations['bitly_links'] = $group;
    }
}
